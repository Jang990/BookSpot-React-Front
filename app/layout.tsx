import { BagProvider } from "@/contexts/BagContext";
import { Header } from "@/components/organisms/Header";
import { Footer } from "@/components/organisms/Footer";
import "./globals.css";
import type React from "react";
import { Metadata } from "next";
import { Gowun_Dodum } from "next/font/google";
import { SearchTermProvider } from "@/contexts/SearchTermContext";
import NextAuthProvider from "@/contexts/NextAuthProvider";
import { ToastProvider } from "@/contexts/ToastContext";
import { OnboardingModal } from "@/components/organisms/onboarding/OnBoardingModal";
import Script from "next/script";

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export const metadata: Metadata = {
  title: "북스팟(BookSpot) | 도서관 통합 검색, 책과 만나는 새로운 공간",
  description:
    "책과 만나는 새로운 공간, BookSpot. 읽고 싶은 그 책, 어느 도서관에 있는지 지도에서 바로 찾아보세요.",
  verification: {
    google: "jdOCc7DZi51FcUZ5NpRyAILDnE4Uzb8WPzjiLdcvFtc",
  },
  other: {
    "naver-site-verification": "21bf14ebc189c29476ebbf9042dacd66e94ebdd0",
    "google-adsense-account": "ca-pub-2464877662475864",

    "og:site_name": "북스팟 (BookSpot)",
    "og:title": "북스팟(BookSpot) | 도서관 통합 검색, 책과 만나는 새로운 공간",
    "og:description":
      "책과 만나는 새로운 공간, BookSpot. 읽고 싶은 그 책, 어느 도서관에 있는지 지도에서 바로 찾아보세요.",
    "og:url": "https://bookspot.store",
  },
  icons: {
    icon: [
      { url: "/favicon-16x16.png", sizes: "16x16", type: "image/png" },
      { url: "/favicon-32x32.png", sizes: "32x32", type: "image/png" },
      { url: "/favicon.ico", type: "image/x-icon" },
    ],
    apple: { url: "/apple-touch-icon.png", sizes: "180x180" },
    other: [
      { rel: "icon", url: "/android-chrome-192x192.png", sizes: "192x192" },
      { rel: "icon", url: "/android-chrome-512x512.png", sizes: "512x512" },
      { rel: "manifest", url: "/site.webmanifest" },
    ],
  },
};

const gowunDodumFont = Gowun_Dodum({
  weight: ["400"],
  subsets: ["latin"],
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="ko">
      <body className={gowunDodumFont.className}>
        <NextAuthProvider>
          <BagProvider>
            <SearchTermProvider>
              <ToastProvider>
                <div className="flex flex-col min-h-screen">
                  <Header />

                  <div className="flex-1 bg-background pt-12 pb-8 px-4 sm:px-6 lg:px-8">
                    <div className="max-w-6xl mx-auto">
                      <div className="w-full max-w-4xl mx-auto">
                        <main className="pt-4">{children}</main>
                      </div>
                    </div>
                  </div>

                  <Footer />
                </div>
                <OnboardingModal />
              </ToastProvider>
            </SearchTermProvider>
          </BagProvider>
        </NextAuthProvider>

        {/* Google Analytics / Ads Script */}
        <Script
          strategy="afterInteractive"
          src={`https://www.googletagmanager.com/gtag/js?id=${process.env.NEXT_PUBLIC_GA_ID}`}
        />
        <Script id="google-analytics" strategy="afterInteractive">
          {`
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());
            gtag('config', '${process.env.NEXT_PUBLIC_GA_ID}');
          `}
        </Script>

        {/* Naver Ads Analytics Script */}
        <Script
          type="text/javascript"
          src="//wcs.naver.net/wcslog.js"
          strategy="afterInteractive"
        />
        <Script id="naver-analytics" strategy="afterInteractive">
          {`
            if (!wcs_add) var wcs_add={};
            wcs_add["wa"] = "${process.env.NEXT_PUBLIC_NAVER_ANALYTICS_ID}";
            if (!_nasa) var _nasa={};
            if(window.wcs){
              wcs.inflow();
              wcs_do();
            }
          `}
        </Script>
      </body>
    </html>
  );
}
